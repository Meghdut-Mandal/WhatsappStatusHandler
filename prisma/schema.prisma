// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../data/wa_sessions.sqlite"
}

model Session {
  id          String    @id @default(cuid())
  deviceName  String
  createdAt   DateTime  @default(now())
  authBlob    String?   // Encrypted authentication data
  lastSeenAt  DateTime?
  isActive    Boolean   @default(true)
  
  // Relations
  sendHistory SendHistory[]
  
  @@map("sessions")
}

model SendHistory {
  id               String    @id @default(cuid())
  sessionId        String
  targetType       String    // 'status', 'contact', 'group'
  targetIdentifier String?   // Phone number, group ID, etc.
  files            String    // JSON array of file paths/info
  status           String    // 'pending', 'uploading', 'sending', 'completed', 'failed'
  createdAt        DateTime  @default(now())
  completedAt      DateTime?
  errorMessage     String?
  
  // Relations
  session Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  @@map("send_history")
}

model MediaMeta {
  id            String   @id @default(cuid())
  filename      String
  originalName  String
  mimetype      String
  sizeBytes     Int
  storagePath   String
  sha256        String?
  tmpCreatedAt  DateTime @default(now())
  duration      Int?     // For videos/audio
  width         Int?     // For images/videos
  height        Int?     // For images/videos
  isTemporary   Boolean  @default(true)
  
  @@map("media_meta")
}

model Contact {
  id              String    @id // WhatsApp JID
  name            String?
  pushName        String?
  notify          String?
  verifiedName    String?
  status          String?
  phoneNumber     String?
  isBusiness      Boolean   @default(false)
  isMyContact     Boolean   @default(false)
  isBlocked       Boolean   @default(false)
  isActive        Boolean   @default(true)
  isFavorite      Boolean   @default(false)
  profilePicUrl   String?
  lastSeen        DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  lastSyncAt      DateTime  @default(now())
  
  @@map("contacts")
}

model Group {
  id              String    @id // WhatsApp Group JID
  subject         String
  description     String?
  participantCount Int      @default(0)
  creation        DateTime?
  owner           String?
  userRole        String?   // 'member', 'admin', 'superadmin'
  canSend         Boolean   @default(true)
  isActive        Boolean   @default(true)
  profilePicUrl   String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  lastSyncAt      DateTime  @default(now())
  
  @@map("groups")
}

model SyncLog {
  id          String    @id @default(cuid())
  type        String    // 'contacts', 'groups', 'full'
  status      String    // 'started', 'completed', 'failed'
  itemsCount  Int?
  errorMessage String?
  startedAt   DateTime  @default(now())
  completedAt DateTime?
  
  @@map("sync_logs")
}
